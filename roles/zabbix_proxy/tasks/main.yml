# ==============================================================================
# Task para a Role 'zabbix_proxy'
# Arquivo: roles/zabbix_proxy/tasks/main.yml
# ==============================================================================

# ==============================================================================
# --- Instalação do Repositório Zabbix ---
# ==============================================================================
- name: Verificar se o repositório Zabbix já está instalado
  ansible.builtin.stat:
    path: "/etc/apt/sources.list.d/zabbix.list"
  register: zabbix_repo_status

- name: Baixar e instalar o pacote do repositório Zabbix
  ansible.builtin.apt:
    deb: "{{ zabbix_repo_url }}"
    state: present
  when: not zabbix_repo_status.stat.exists

# ==============================================================================
# --- Instalação e Configuração do Zabbix Proxy ---
# ==============================================================================
- name: Atualizar cache de pacotes
  ansible.builtin.apt:
    update_cache: yes

- name: Instalar Zabbix Proxy com SQLite
  ansible.builtin.apt:
    name: "{{ zabbix_proxy_package }}"
    state: present

- name: Criar diretórios necessários
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: zabbix
    group: zabbix
    mode: '0755'
  loop:
    - { path: "{{ zabbix_proxy_dbname | dirname }}" }
    - { path: "{{ zabbix_proxy_logfile | dirname }}" }
    - { path: "{{ zabbix_proxy_socket_dir }}" }

# ==============================================================================
# --- Geração e Configuração da Chave PSK para Criptografia ---
# Esta seção gera a chave PSK e a registra como um "fato" para automação da API.
# ==============================================================================

# 1. Verificar se o arquivo PSK já existe
- name: Verificar status do arquivo PSK do proxy
  ansible.builtin.stat:
    path: "{{ zabbix_proxy_psk_file }}"
  register: proxy_psk_file_status
  changed_when: false

# 2. Criar diretório para o arquivo PSK se não existir
- name: Criar diretório para o arquivo PSK do proxy
  ansible.builtin.file:
    path: "{{ zabbix_proxy_psk_file | dirname }}"
    state: directory
    owner: zabbix
    group: zabbix
    mode: '0755'
  when: not proxy_psk_file_status.stat.exists

# 3. Gerar o valor da chave PSK (somente se o arquivo não existir)
- name: Gerar valor da chave PSK
  ansible.builtin.shell: openssl rand -hex 32
  register: proxy_psk_value_raw
  when: not proxy_psk_file_status.stat.exists
  changed_when: true

# 4. Ler a chave PSK do arquivo se já existir
- name: Ler chave PSK existente do arquivo
  ansible.builtin.slurp:
    src: "{{ zabbix_proxy_psk_file }}"
  register: proxy_psk_file_content
  when: proxy_psk_file_status.stat.exists

# 5. Registrar a identidade e a chave PSK como fatos para uso pela API
- name: Registrar informações do Proxy para a API
  ansible.builtin.set_fact:
    proxy_api_psk_identity: "{{ zabbix_proxy_psk_identity }}"
    proxy_api_psk_key: "{{ (proxy_psk_file_status.stat.exists) | ternary(proxy_psk_file_content.content | b64decode | trim, proxy_psk_value_raw.stdout) }}"
    cacheable: yes

# 6. Exibir a chave PSK para o usuário (para fins de debug)
- name: Exibir valor da chave PSK gerada
  ansible.builtin.debug:
    msg: "VALOR DA CHAVE PSK: {{ proxy_api_psk_key }}"
  when: not proxy_psk_file_status.stat.exists

# 7. Criar o arquivo PSK e definir permissões (somente se o arquivo não existir)
- name: Criar arquivo PSK e definir permissões
  ansible.builtin.copy:
    content: "{{ proxy_psk_value_raw.stdout }}"
    dest: "{{ zabbix_proxy_psk_file }}"
    owner: zabbix
    group: zabbix
    mode: '0600'
  when: not proxy_psk_file_status.stat.exists

# ==============================================================================
# --- Aplicar configuração do Zabbix Proxy ---
# ==============================================================================
- name: Aplicar configuração do Zabbix Proxy
  ansible.builtin.template:
    src: zabbix_proxy.conf.j2
    dest: /etc/zabbix/zabbix_proxy.conf
    owner: root
    group: root
    mode: '0644'
  notify: Reiniciar Zabbix Proxy

# ==============================================================================
# --- Gestão do Serviço ---
# ==============================================================================
- name: Habilitar e iniciar Zabbix Proxy
  ansible.builtin.systemd:
    name: zabbix-proxy
    enabled: yes
    state: started