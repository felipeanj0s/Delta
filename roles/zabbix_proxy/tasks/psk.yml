# ==============================================================================
# Gestão da chave PSK do Proxy Zabbix
# ==============================================================================

- name: PSK | Verificar status do arquivo PSK
  ansible.builtin.stat:
    path: "{{ zabbix_proxy_psk_file }}"
  register: proxy_psk_file_status
  changed_when: false

- name: PSK | Criar diretório para o arquivo PSK
  ansible.builtin.file:
    path: "{{ zabbix_proxy_psk_file | dirname }}"
    state: directory
    owner: zabbix
    group: zabbix
    mode: '0755'

- name: PSK | Gerar nova chave se não existir
  ansible.builtin.shell: "openssl rand -hex 32"
  register: proxy_psk_value_raw
  when: not proxy_psk_file_status.stat.exists
  changed_when: true

- name: PSK | Ler chave existente do arquivo
  ansible.builtin.slurp:
    src: "{{ zabbix_proxy_psk_file }}"
  register: proxy_psk_file_content
  when: proxy_psk_file_status.stat.exists

- name: PSK | Definir variáveis de identidade e chave
  ansible.builtin.set_fact:
    proxy_api_psk_identity: "{{ zabbix_proxy_psk_identity }}"
    proxy_api_psk_key: >-
      {{ (proxy_psk_file_status.stat.exists) |
         ternary(proxy_psk_file_content.content | b64decode | trim,
                 proxy_psk_value_raw.stdout) }}
    cacheable: yes

- name: PSK | Criar arquivo com a chave (se não existir)
  ansible.builtin.copy:
    content: "{{ proxy_api_psk_key }}"
    dest: "{{ zabbix_proxy_psk_file }}"
    owner: zabbix
    group: zabbix
    mode: '0600'
  when: not proxy_psk_file_status.stat.exists

- name: PSK | Debug - Exibir chave que será usada
  ansible.builtin.debug:
    var: proxy_api_psk_key
