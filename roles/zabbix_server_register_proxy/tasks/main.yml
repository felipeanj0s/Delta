# ======================================================================
# GT Monitoramento 2025
# Arquivo: roles/zabbix_server_register_proxy/tasks/main.yml
# VERSÃO COM LÓGICA DE PORTA CORRIGIDA
# ======================================================================
---
- name: Garantir que o Proxy esteja criado e configurado corretamente no Zabbix Server
  # Definimos as variáveis de conexão aqui, para o plugin httpapi usar
  vars:
    # Primeiro, extrai a porta. Se estiver vazia, define 80 ou 443 com base no protocolo.
    ansible_httpapi_port: "{{ (zabbix_server_url | urlsplit('port')) or (80 if zabbix_server_url.startswith('http://') else 443) }}"
    
    ansible_host: "{{ zabbix_server_url | urlsplit('hostname') }}"
    ansible_httpapi_use_ssl: "{{ zabbix_server_url.startswith('https://') }}"
    ansible_httpapi_validate_certs: false
    ansible_zabbix_url_path: "{{ (zabbix_server_url | urlsplit('path')).split('/')[1] | default('zabbix') }}"
    ansible_zabbix_auth_key: "{{ zabbix_api_token }}"
    ansible_connection: ansible.netcommon.httpapi

  
  community.zabbix.zabbix_proxy:
    proxy_name: "{{ zabbix_proxy_hostname }}"
    state: present
    description: "Proxy {{ zabbix_proxy_hostname }} provisionado via Ansible"
    operating_mode: "{{ 'active' if zabbix_proxy_mode == 0 else 'passive' }}"
    allowed_addresses: "{{ zabbix_proxy_hostname }}"
    address: "{{ pop_network_ipv4_address.split('/')[0] }}"
    port: "{{ zabbix_proxy_listenport | default('10051') | string }}"
    tls_connect: "{{ 'PSK' if zabbix_proxy_tls_connect == 1 else 'no_encryption' }}"
    tls_accept: "{{ 'PSK' if zabbix_proxy_tls_accept == 1 else 'no_encryption' }}"
    tls_psk_identity: "{{ proxy_api_psk_identity }}"
    tls_psk: "{{ proxy_api_psk_key }}"

  delegate_to: localhost
  run_once: true