# roles/zabbix_server_register_proxy/tasks/main.yml
---
# 1) Headers
- name: API | Headers (Bearer)
  ansible.builtin.set_fact:
    zbx_headers:
      Content-Type: "application/json-rpc"
      Authorization: "Bearer {{ zabbix_api_token }}"
  no_log: true

# 2) Sanity leve
- name: Sanity | TLS/Modo
  ansible.builtin.assert:
    that:
      - (zabbix_proxy_mode | int) in [0, 1]
      - (zabbix_proxy_tls_connect | int) in [1, 2]
      - (zabbix_proxy_tls_accept  | int) in [1, 2, 3, 4]
    fail_msg: "Valores inválidos para modo/TLS do proxy."

# PSK só é obrigatória se for usar/aceitar PSK (acept em [1,3] cobre PSK ou PSK+Cert)
- name: Sanity | PSK precisa ter 64 hex quando for PSK
  ansible.builtin.assert:
    that:
      - (proxy_api_psk_key | default(zabbix_proxy_psk_key, true)) is match('^[0-9a-fA-F]{64}$')
    fail_msg: "PSK inválida. Defina proxy_api_psk_key ou zabbix_proxy_psk_key com 64 hex."
  when: (zabbix_proxy_tls_connect | int) == 1 or (zabbix_proxy_tls_accept | int) in [1, 3]

# 3) proxy.get
- name: API | proxy.get (por nome)
  ansible.builtin.uri:
    url: "{{ zabbix_server_url }}/api_jsonrpc.php"
    method: POST
    headers: "{{ zbx_headers }}"
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "proxy.get"
      params:
        filter:
          name: ["{{ zabbix_proxy_hostname }}"]
        output: ["proxyid","name","operating_mode","tls_connect","tls_accept"]
      id: 1
    follow_redirects: all
  register: zbx_proxy_get
  failed_when: zbx_proxy_get.json.error is defined
  delegate_to: localhost
  run_once: true

- name: Fatos | Extrair dados do proxy
  ansible.builtin.set_fact:
    zbx_proxy_exists: "{{ (zbx_proxy_get.json.result | default([])) | length > 0 }}"
    zbx_proxy_id: "{{ (zbx_proxy_get.json.result | default([])) | map(attribute='proxyid') | first | default('') }}"
    zbx_mode_cur: "{{ (zbx_proxy_get.json.result | default([])) | map(attribute='operating_mode') | first | default(omit) }}"
    zbx_tls_conn_cur: "{{ (zbx_proxy_get.json.result | default([])) | map(attribute='tls_connect') | first | default(omit) }}"
    zbx_tls_acc_cur: "{{ (zbx_proxy_get.json.result | default([])) | map(attribute='tls_accept')  | first | default(omit) }}"

# 4) proxy.create — envia identity/psk APENAS se for PSK
- name: API | proxy.create
  ansible.builtin.uri:
    url: "{{ zabbix_server_url }}/api_jsonrpc.php"
    method: POST
    headers: "{{ zbx_headers }}"
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "proxy.create"
      params:
        name: "{{ zabbix_proxy_hostname }}"
        description: "Provisionado via Ansible"
        operating_mode: "{{ zabbix_proxy_mode | int }}"
        tls_connect: "{{ zabbix_proxy_tls_connect | int }}"
        tls_accept: "{{ zabbix_proxy_tls_accept | int }}"
        # Campos abaixo só entram se for PSK; caso contrário são OMISSOS.
        tls_psk_identity: >-
          {{
            ((zabbix_proxy_tls_connect | int) == 1 or (zabbix_proxy_tls_accept | int) in [1,3])
            | ternary(zabbix_proxy_psk_identity, omit)
          }}
        tls_psk: >-
          {{
            ((zabbix_proxy_tls_connect | int) == 1 or (zabbix_proxy_tls_accept | int) in [1,3])
            | ternary(proxy_api_psk_key | default(zabbix_proxy_psk_key), omit)
          }}
      id: 2
    follow_redirects: all
  when: not zbx_proxy_exists
  register: zbx_proxy_create
  failed_when: zbx_proxy_create.json.error is defined
  delegate_to: localhost
  run_once: true

# 5) proxy.update — NUNCA enviar identity/psk aqui
- name: Precisa atualizar?
  ansible.builtin.set_fact:
    zbx_needs_update: >-
      {{
        zbx_proxy_exists and (
          (zbx_mode_cur | int)      != (zabbix_proxy_mode | int) or
          (zbx_tls_conn_cur | int)  != (zabbix_proxy_tls_connect | int) or
          (zbx_tls_acc_cur  | int)  != (zabbix_proxy_tls_accept  | int)
        )
      }}

- name: API | proxy.update (modo/TLS)
  ansible.builtin.uri:
    url: "{{ zabbix_server_url }}/api_jsonrpc.php"
    method: POST
    headers: "{{ zbx_headers }}"
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "proxy.update"
      params:
        proxyid: "{{ zbx_proxy_id }}"
        operating_mode: "{{ zabbix_proxy_mode | int }}"
        tls_connect: "{{ zabbix_proxy_tls_connect | int }}"
        tls_accept: "{{ zabbix_proxy_tls_accept | int }}"
      id: 3
    follow_redirects: all
  when: zbx_needs_update
  register: zbx_proxy_update
  failed_when: zbx_proxy_update.json.error is defined
  delegate_to: localhost
  run_once: true

# 6) Mensagem final
- name: Final | Resultado
  ansible.builtin.debug:
    msg: >-
      Proxy '{{ zabbix_proxy_hostname }}' {{
        (not zbx_proxy_exists) | ternary('criado',
        (zbx_needs_update | ternary('atualizado','verificado')) )
      }} via API. Interface (IP) ajusta-se na UI.
