# roles/zabbix_server_register_proxy/tasks/main.yml
---
# 1) Ver se já existe
- name: API | proxy.get (por nome)
  ansible.builtin.uri:
    url: "{{ zabbix_server_url }}/api_jsonrpc.php"
    method: POST
    headers:
      Content-Type: "application/json-rpc"
      Authorization: "Bearer {{ zabbix_api_token }}"
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "proxy.get"
      params:
        filter:
          name: ["{{ zabbix_proxy_hostname }}"]
        output: ["proxyid","name","operating_mode","tls_connect","tls_accept"]
      id: 1
    follow_redirects: all
  register: zbx_proxy_get
  failed_when: zbx_proxy_get.json.error is defined
  delegate_to: localhost
  run_once: true

- name: Fatos | existe/id/estado atual
  ansible.builtin.set_fact:
    zbx_proxy_exists: "{{ (zbx_proxy_get.json.result | default([])) | length > 0 }}"
    zbx_proxy_id: "{{ (zbx_proxy_get.json.result | default([])) | map(attribute='proxyid') | first | default('') }}"
    zbx_mode_cur: "{{ (zbx_proxy_get.json.result | default([])) | map(attribute='operating_mode') | first | default(omit) }}"
    zbx_tls_conn_cur: "{{ (zbx_proxy_get.json.result | default([])) | map(attribute='tls_connect') | first | default(omit) }}"
    zbx_tls_acc_cur:  "{{ (zbx_proxy_get.json.result | default([])) | map(attribute='tls_accept')  | first | default(omit) }}"

# 2) Criar (SEM TLS IDENTITY/PSK!)
- name: API | proxy.create (mínimo)
  ansible.builtin.uri:
    url: "{{ zabbix_server_url }}/api_jsonrpc.php"
    method: POST
    headers:
      Content-Type: "application/json-rpc"
      Authorization: "Bearer {{ zabbix_api_token }}"
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "proxy.create"
      params:
        name: "{{ zabbix_proxy_hostname }}"
        description: "Proxy {{ zabbix_proxy_hostname }} provisionado via Ansible"
        operating_mode: "{{ zabbix_proxy_mode | int }}"
      id: 2
    follow_redirects: all
  when: not zbx_proxy_exists
  register: zbx_proxy_create
  failed_when: zbx_proxy_create.json.error is defined
  delegate_to: localhost
  run_once: true

# 3) Descobrir ID após create
- name: Atualizar ID (se criou agora)
  ansible.builtin.set_fact:
    zbx_proxy_id: "{{ zbx_proxy_create.json.result.proxyids[0] }}"
  when: not zbx_proxy_exists

# 4) Ajustar modo/TLS (APENAS tls_connect/tls_accept)
- name: Precisa atualizar modo/TLS?
  ansible.builtin.set_fact:
    zbx_needs_update: >-
      {{
        (zbx_proxy_id | length > 0) and (
          (zbx_proxy_exists and (
            (zbx_mode_cur | int)      != (zabbix_proxy_mode | int) or
            (zbx_tls_conn_cur | int)  != (zabbix_proxy_tls_connect | int) or
            (zbx_tls_acc_cur  | int)  != (zabbix_proxy_tls_accept  | int)
          ))
          or
          (not zbx_proxy_exists)      # se acabou de criar, aplicar TLS desejado
        )
      }}

- name: API | proxy.update (somente modo/TLS)
  ansible.builtin.uri:
    url: "{{ zabbix_server_url }}/api_jsonrpc.php"
    method: POST
    headers:
      Content-Type: "application/json-rpc"
      Authorization: "Bearer {{ zabbix_api_token }}"
    body_format: json
    body:
      jsonrpc: "2.0"
      method: "proxy.update"
      params:
        proxyid: "{{ zbx_proxy_id }}"
        operating_mode: "{{ zabbix_proxy_mode | int }}"
        tls_connect: "{{ zabbix_proxy_tls_connect | int }}"
        tls_accept: "{{ zabbix_proxy_tls_accept  | int }}"
      id: 3
    follow_redirects: all
  when: zbx_needs_update
  register: zbx_proxy_update
  failed_when: zbx_proxy_update.json.error is defined
  delegate_to: localhost
  run_once: true

# 5) Mensagem
- name: Final | Resultado
  ansible.builtin.debug:
    msg: >-
      Proxy '{{ zabbix_proxy_hostname }}' {{
        (not zbx_proxy_exists) | ternary('criado',
        (zbx_needs_update | ternary('atualizado','verificado')))
      }} via API.
      ⚠️ PSK/identity são definidas apenas no zabbix_proxy.conf do proxy.
