---
# ==============================================================================
# Tasks da Role 'network_security'
# Arquivo: roles/net_security/tasks/main.yml
# Descrição:
#   Este playbook orquestra a aplicação de configurações essenciais de segurança
#   e rede no servidor, garantindo um estado inicial seguro e funcional.
#   As tarefas incluem:
#    - Configuração do nome do host (`hostname`).
#    - Aplicação da configuração de rede (`ifupdown` no Debian).
#    - Instalação e ativação de serviços de segurança (`UFW` e `Fail2Ban`).
#    - Personalização da porta SSH e outras diretivas de segurança.
#    - Aplicação granular de regras de firewall de entrada e saída.
#   Todas as variáveis utilizadas são gerenciadas de forma centralizada
#   no arquivo `group_vars/all.yml`.
# ==============================================================================

# ==============================================================================
# --- Verificação de Conectividade ---
# Esta tarefa simples executa um teste de ping para cada IP na lista
# de forma separada.
# ==============================================================================
- name: Testar a conectividade com os IPs de destino
  ansible.builtin.command: "ping -c 3 {{ item }}"
  loop:
    - "{{ zabbix_server_ip }}"
    - "{{ pop_network_ipv4_address.split('/') | first }}"
    - "{{ pop_network_ipv6_address.split('/') | first }}"
    - "{{ pop_network_ipv4_gateway }}"
    - "{{ pop_network_ipv6_gateway }}"
    - "{{ pop_network_dns_list }}"
  register: ping_results
  changed_when: false
  ignore_errors: true

# ==============================================================================
# --- Exibir Resultados dos Testes ---
# Mostra o resultado do teste para cada IP, indicando se foi bem-sucedido ou não.
# ==============================================================================
- name: Mostrar resultados dos testes de conectividade
  ansible.builtin.debug:
    msg: "Teste para {{ item }}: {{ 'Sucesso' if item.rc == 0 else 'Falha' }}"
  loop: "{{ ping_results.results }}"






# ==============================================================================
# --- Configuração do Hostname ---
# Define o nome da máquina para facilitar a identificação na rede e no
# sistema de monitoramento Zabbix.
# ==============================================================================
- name: Configurar o hostname da máquina
  ansible.builtin.hostname:
    name: "{{ zabbix_proxy_hostname }}"

# ==============================================================================
# --- Configuração de Rede (Debian) ---
# Gera o arquivo de configuração de rede para o Debian (`/etc/network/interfaces`)
# a partir do template `interfaces.j2`.
# ==============================================================================
- name: Configurar rede via interfaces (Debian)
  ansible.builtin.template:
    src: interfaces.j2
    dest: "/etc/network/interfaces"
    owner: root
    group: root
    mode: '0644'
  notify: Reiniciar Networking

# ==============================================================================
# --- Configuração do Banner de Acesso ---
# Aplica um template para criar o banner de aviso no login SSH.
# O banner é dinâmico, usando o nome do host via variável.
# ==============================================================================
- name: Criar banner de aviso (issue.net)
  ansible.builtin.template:
    src: issue.net.j2
    dest: "/etc/issue.net"
    owner: root
    group: root
    mode: "0644"

# ==============================================================================
# --- Configuração do MOTD (Message of the Day) ---
# Adiciona um script personalizado para exibir informações do sistema
# após o login.
# ==============================================================================
- name: Criar script personalizado para MOTD
  ansible.builtin.template:
    src: "motd_info.j2"
    dest: "/etc/update-motd.d/99-ansible-info"
    owner: root
    group: root
    mode: "0755"
  notify: Atualizar MOTD

# ==============================================================================
# --- Instalação de Ferramentas de Segurança ---
# Garante a presença dos pacotes `ufw` e `fail2ban`.
# ==============================================================================
- name: Instalar UFW e Fail2Ban
  ansible.builtin.apt:
    name:
      - ufw
      - fail2ban
    state: present
    update_cache: yes

# ==============================================================================
# --- Configuração da Porta SSH ---
# Aplica um template para configurar a porta de escuta do SSH e outras diretivas.
# ==============================================================================
- name: Configurar a porta do SSH no sshd_config
  ansible.builtin.template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0600'
  notify:
    - Reiniciar SSH

# ==============================================================================
# --- Configuração de Regras do UFW (Inbound) ---
# Aplica as regras de firewall para tráfego de entrada.
# ==============================================================================
- name: Configurar regras UFW (entrada)
  ansible.builtin.ufw:
    rule: "{{ item.rule }}"
    from_ip: "{{ item.from | default(omit) }}"
    to_ip: "{{ item.to | default(omit) }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default(omit) }}"
    comment: "{{ item.comment | default(omit) }}"
  loop: "{{ ufw_rules }}"
  when: item.direction is not defined or item.direction == 'in'

# ==============================================================================
# --- Configuração de Regras do UFW (Outbound) ---
# Aplica as regras de firewall para tráfego de saída.
# ==============================================================================
- name: Configurar regras UFW (saída)
  ansible.builtin.ufw:
    rule: "{{ item.rule }}"
    direction: "{{ item.direction }}"
    from_ip: "{{ item.from | default(omit) }}"
    to_ip: "{{ item.to | default(omit) }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default(omit) }}"
    comment: "{{ item.comment | default(omit) }}"
  loop: "{{ ufw_rules }}"
  when: item.direction is defined and item.direction == 'out'

# ==============================================================================
# --- Ativação do Firewall ---
# Habilita o firewall `ufw` após a aplicação de todas as regras.
# ==============================================================================
- name: Habilitar UFW
  ansible.builtin.ufw:
    state: enabled

# ==============================================================================
# --- Configuração do Fail2Ban para SSH ---
# Copia o template de configuração do Fail2Ban para a jail 'sshd'.
# ==============================================================================
- name: Configurar Fail2Ban SSHD
  ansible.builtin.template:
    src: sshd.local.j2
    dest: /etc/fail2ban/jail.d/sshd.local
    owner: root
    group: root
    mode: '0644'
  notify: Reiniciar Fail2Ban